export enum AuthProviderType {
	EMAIL_PASSWORD = 'EMAIL_PASSWORD',
	OAUTH_GOOGLE = 'OAUTH_GOOGLE',
	OAUTH_GITHUB = 'OAUTH_GITHUB'
}
export enum SystemWideNoitficationTypes {
	SUCCESS = 'SUCCESS',
	INFO = 'INFO',
	WARNING = 'WARNING',
	ERROR = 'ERROR'
}

export enum DBMysqlStatus {
	REQUESTED = 'REQUESTED',
	UPDATE_REQUESTED = 'UPDATE_REQUESTED',
	OK = 'OK',
	FAILED = 'FAILED',
	UPDATE_FAILED = 'UPDATE_FAILED',
	PENDING_DELETE = 'PENDING_DELETE'
}

export enum DBRedisStatus {

	REQUESTED = 'REQUESTED',
	UPDATE_REQUESTED = 'UPDATE_REQUESTED',
	OK = 'OK',
	FAILED = 'FAILED',
	UPDATE_FAILED = 'UPDATE_FAILED',
	PENDING_DELETE = 'PENDING_DELETE'
}

export enum DBPostgresStatus {
	REQUESTED = 'REQUESTED',
	UPDATE_REQUESTED = 'UPDATE_REQUESTED',
	OK = 'OK',
	FAILED = 'FAILED',
	UPDATE_FAILED = 'UPDATE_FAILED',
	PENDING_DELETE = 'PENDING_DELETE'
}
export enum DBMongoStatus {
	REQUESTED = 'REQUESTED',
	UPDATE_REQUESTED = 'UPDATE_REQUESTED',
	OK = 'OK',
	FAILED = 'FAILED',
	UPDATE_FAILED = 'UPDATE_FAILED',
	PENDING_DELETE = 'PENDING_DELETE'
}

export enum InternalNewProjectType {
	LOCAL_FILE_UPLOAD = 'LOCAL_FILE_UPLOAD',
	LIST_GITHUB_REPO = 'LIST_GITHUB_REPO',
	CREATE_PROJECT_FROM_GITHUB = 'CREATE_FROM_GITHUB',
	CREATE_PROJECT_FROM_LOCAL_FILE = 'CREATE_FROM_FILE',
	ROLLFORWARD_FROM_LOCAL_FILE = 'ROLLFORWARD_FROM_LOCAL_FILE'
}
export enum ProjectType {
	LOCAL_FILES = 'LOCAL_FILES',
	GITHUB_REPO = 'GITHUB_REPO',
}

export enum InternalProjectSetupCommand {
	CHECK_UNIQUE_NAME = 'check-unique-name',
	LIST_SOURCE_FILES = 'list-source-files',
	PROJECT_SCREEENSHOT = 'project-screenshot',

	DEPLOY_PROJECT = 'deploy-project',
	RE_DEPLOY_PROJECT = 're-deploy-project',
	UPDATE_DEPLOYMENT = 'update-deployment',

	ROLLBACK = 'rollback',
	ROLLFORWARD = 'rollforward',

	DELETE_INCOMPLETE_PROJECT = 'delete-incomplete-project',
	DELETE_PROJECT = 'delete-project',
}


export enum ProjectStatus {


	AWAIT_INITIAL_SETUP = 'AWAIT_INITIAL_SETUP',
	PROCESSING_SETUP = 'PROCESSING_SETUP',
	PROCESSING_DEPLOYMENT = 'PROCESSING_DEPLOYMENT',
	PROCESSING_UPDATE = 'PROCESSING_UPDATE',
	PROCESSING_ROLLBACK = 'PROCESSING_ROLLBACK',
	PROCESSING_REDEPLOYMENT = 'PROCESSING_REDEPLOYMENT',
	PROCESSING_DELETION = 'PROCESSING_DELETION',

	ACTIVE = 'ACTIVE',
	INACTIVE = 'INACTIVE',



}


export enum ProjectDeploymentStatus {

	PRE_CREATION = "PRE_CREATION",
	READY_FOR_DEPLOYMENT = "READY_FOR_DEPLOYMENT",

	REQUESTED_DEPLOYMENT = "REQUESTED_DEPLOYMENT",
	REQUESTED_REDEPLOYMENT = "REQUESTED_REDEPLOYMENT",
	DEPLOYMENT_BEING_PROCESSED = "REQUESTED_DEPLOYMENT",
	DEPLOYMENT_COMPLETED = "DEPLOYMENT_COMPLETED",
	DEPLOYMENT_FAILED = "DEPLOYMENT_FAILED",
	REQUESTED_DELETION = "REQUESTED_DELETION",
	DELETING_DEPLOYMENT = "DELETING_DEPLOYMENT",
	COMPLETED_DELETION = "COMPLETED_DELETION",



}


export enum AIChatCommands {
	INIT_CHAT = 'INIT_CHAT',
	SEND_MESSAGE = 'SEND_MESSAGE',
	GET_MESSAGES = 'GET_MESSAGES',
	CLOSE_CHAT_WITH_SYNC = 'CLOSE_CHAT_WITH_DB_SYNC',
	CLOSE_CHAT_WITHOUT_SYNC = 'CLOSE_CHAT_WITHOUT_DB_SYNC',
}


export enum InternalDeploymentActions {

	UPDATE_DEPLOYMENT = 'update-deployment',

	ROLLBACK = 'rollback',
	ROLLFORWARD = 'rollforward',

	INITIAL_SETUP = 'initial-setup',
	RE_DEPLOY = 're-deploy',

	// MODIFY_ENV = 'modify-env', // update handles this
	MODIFY_DOMAIN = 'modify-domain',
	CODE_DOCS = 'code-docs',

	DELETE_PROJECT = 'delete-project',
	// ROLLBACK = "rollback"
}

export enum InternalDocGenerationCommands {
	GET_DOCS = 'get-docs',
	GENERATE_DOC = 'generate-doc',
	DELETE_DOC = 'delete-doc'
}